{"version":3,"file":"static/js/15.46e3ade9.chunk.js","mappings":"ySAAMA,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oFACU,gDADV,SAEQC,MAAM,GAAD,OADH,gDACG,oBAAsBF,IAAOG,MAAK,SAAAC,GAClD,OAAOA,EAASC,UAHb,0GAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uEACU,4CADV,SAEQL,MAAM,GAAD,OADH,4CACG,kBACGK,EADH,oBACmBP,EADnB,+CAEhBG,MAAK,SAAAC,GACL,OAAOA,EAASC,UALb,0GASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,6EACU,qCADV,SAEkBP,MAAM,GAAD,OADb,qCACa,YAAcO,EAAd,oBAA4BT,IAFnD,YAECI,EAFD,QAIQM,GAJR,yCAKIN,EAASC,QALb,gCAOEM,QAAQC,OAAO,IAAIC,MAAM,iBAP3B,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BL,GAA5B,uEACU,qCADV,SAEQP,MAAM,GAAD,OADH,qCACG,YAAcO,EAAd,4BAAoCT,IAAOG,MAC3D,SAAAC,GACE,OAAOA,EAASC,UAJf,0GASA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA+BN,GAA/B,uEACU,qCADV,SAEQP,MAAM,GAAD,OADH,qCACG,YACHO,EADG,4BACmBT,EADnB,2BAEhBG,MAAK,SAAAC,GACL,OAAOA,EAASC,UALb,4G,yGClCQ,SAASW,EAAT,GAA8B,IAAXC,EAAU,EAAVA,OAChC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAgBE,GAAQd,MAAK,SAAAmB,GAC3BF,EAAWE,EAAGC,cAEf,CAACN,KAGF,8BACGE,EAAQK,OAAS,GAChB,wBACGL,EAAQM,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,2CAAiBD,MACjB,uBAAIC,MAFGlB,SAOb,yE","sources":["ApiService/ApiService.js","components/Reviews/Reviews.js"],"sourcesContent":["const KEY = '17c4970d0921f1b7b3b06c6448785e5d';\n\nexport async function GetTrending() {\n  const BasUpl = 'https://api.themoviedb.org/3/trending/all/day';\n  return await fetch(`${BasUpl}?api_key=${KEY}`).then(response => {\n    return response.json();\n  });\n}\n\nexport async function SearchMovies(name) {\n  const BasUpl = 'https://api.themoviedb.org/3/search/movie';\n  return await fetch(\n    `${BasUpl}?query=${name}&api_key=${KEY}&language=en-US&page=1&include_adult=false`\n  ).then(response => {\n    return response.json();\n  });\n}\n\nexport async function GetMovieDetails(id) {\n  const BasUpl = 'https://api.themoviedb.org/3/movie';\n  const response = await fetch(`${BasUpl}/${id}?api_key=${KEY}`);\n\n  if (response.ok) {\n    return response.json();\n  }\n  return Promise.reject(new Error(' Error: 404'));\n}\n\nexport async function GetMovieCast(id) {\n  const BasUpl = 'https://api.themoviedb.org/3/movie';\n  return await fetch(`${BasUpl}/${id}/credits?api_key=${KEY}`).then(\n    response => {\n      return response.json();\n    }\n  );\n}\n\nexport async function GetMovieReviews(id) {\n  const BasUpl = 'https://api.themoviedb.org/3/movie';\n  return await fetch(\n    `${BasUpl}/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  ).then(response => {\n    return response.json();\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport { GetMovieReviews } from 'ApiService/ApiService';\n\nexport default function Reviews({ filmId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    GetMovieReviews(filmId).then(el => {\n      setReviews(el.results);\n    });\n  }, [filmId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{`Author : ${author}`}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h3>We don't have any reviews for this movie</h3>\n      )}\n    </>\n  );\n}\n"],"names":["KEY","GetTrending","fetch","then","response","json","SearchMovies","name","GetMovieDetails","id","ok","Promise","reject","Error","GetMovieCast","GetMovieReviews","Reviews","filmId","useState","reviews","setReviews","useEffect","el","results","length","map","author","content"],"sourceRoot":""}